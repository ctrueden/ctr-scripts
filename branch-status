#!/bin/bash

#
# branch-status - scan for branches with unpushed changes
#

case "$1" in
	-a)
		all=1
		;;
	*)
		;;
esac

repos=$(mr-git-remotes)
for repo in $repos
do (
	repo=$(echo "$repo" | cut -f2)
	test "$repo" != "DEFAULT" || continue
	test -d "$HOME/$repo/.git" || continue
	cd "$HOME/$repo"
	repo="$(echo "$repo" | sed 's/.*\///')"

	# NB: Portions of the following were stolen from:
	# http://stackoverflow.com/a/2658301

	# check for dirty working copy
	test "$(git diff --shortstat 2> /dev/null | tail -n1)" == "" ||
		printf "%20s : %s\n" "$repo" "{DIRTY}"

	# check for untracked files
	test "$(git status --porcelain 2> /dev/null | grep "^??")" &&
		printf "%20s : %s\n" "$repo" "{UNTRACKED}"

	# check for stashes
	test "$(git stash list | tail -n1)" == "" ||
		printf "%20s : %s\n" "$repo" "{STASH}"

	# check branches
	if [ "$all" ]
	then
		# report on all local branches
		branches=$(git branch -vv |
			sed -E 's/^\*? *//' |
			sed -E 's/  */~/g')
	else
		# check for unpushed branches
		branches=$(git branch -vv |
			grep -v '\[[^ ]\+\]' |
			sed -E 's/^\*? *//' |
			sed -E 's/  */~/g')
	fi
	for branch in $branches
	do (
		branch="$(echo "$branch" | sed 's/~/ /g')"
		test "$branch" != "" || continue
		if [ "$all" ]
		then
			upstream=$(echo "$branch" | sed -E 's/.*\[([^ ]+)\].*/\1/')
			test "$upstream" != "origin/master" \
				-a "$upstream" != "origin/develop" \
				-a "$upstream" != "origin/trunk" \
				-a "$upstream" != "origin/svn/trunk" \
				|| continue
		fi
		printf "%20s : %s\n" "$repo" "$branch"
	) done
) done
